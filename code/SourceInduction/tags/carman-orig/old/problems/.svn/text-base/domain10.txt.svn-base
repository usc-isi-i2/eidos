##############################################################
## PROBLEM DOMAIN DESCRIPTION: 


## Semantic Types: 
type zipcode	  [varchar(10)]  {uscensusbureau.zipnov99.zipcode}
type latitude	  [varchar(13)] {numeric: -90.0, +90.0, 0.05}
type longitude	  [varchar(13)]  {numeric: -180.0, +180.0, 0.05}
type miles		  [varchar(30)]  {numeric: 0.0, 24901.55 , 2%}
type kilometres	  [varchar(30)]  {numeric: 0.0, 40075.16 , 2%}
type poBox		  [varchar(30)]
type streetnumber [varchar(10)] 
type street		  [varchar(80)] 
type streetAddr	  [varchar(100)] 
type apartment	  [varchar(10)] 
type city		  [varchar(50)]  {uscensusbureau.zipnov99.postofficename}
type stateName	  [varchar(30)]  {miscellaneous.usstates.name}
type stateAbbr	  [varchar(2)]   {miscellaneous.usstates.code}
type countryName  [varchar(100)]
type countryAbbr  [varchar(2)]
type areacode	  [varchar(3)] 
type timezone	  [varchar(5)] 
type celsius	  [varchar(13)]  {numeric: -50.0, +100.0, 3%}
type fahrenheit	  [varchar(13)]  {numeric: -100.0, +200.0, 3%}
type sky		  [varchar(100)] 
type dewpoint	  [varchar(30)]
type humidity	  [varchar(30)]
type wind		  [varchar(30)]
type pressure	  [varchar(30)]
type time		  [varchar(80)]
type date		  [varchar(80)]
type dayofweek	  [varchar(10)]
type url		  [varchar(80)]
type hotel	  	  [varchar(80)]  
type company	  [varchar(80)]  {miscellaneous.companies.name; equality: JaroWinkler > 0.85}
type ticker		  [varchar(6)]   {miscellaneous.companies.ticker}
type price		  [varchar(30)]  {finance.quotes.Last}
type priceRange	  [varchar(65)] 
type count		  [varchar(30)]
type percentage	  [varchar(30)]
type ratio		  [varchar(30)]
type floors		  [varchar(30)]
type phoneNumber  [varchar(20)]
type unknown	  [varchar(80)]

## Domain Relations: 
relation centroid(zipcode,latitude,longitude)
relation distance(latitude,longitude,latitude,longitude,kilometres)
relation convert(kilometres,miles)
relation address(streetnumber,street,apartment,zipcode)
relation municipality(city,stateAbbr,zipcode)
relation phoneprefix(zipcode,areacode)
relation timezone(stateAbbr,timezone)
relation convertTemp(celsius,fahrenheit)
relation listing(company,ticker)
relation currentTime(date,time)
relation trade(date,time,ticker,price)
relation market(date,ticker,price:close,price:open,price:max,price:min,count:volume)
relation add($price,$price,price)

## Comparison Predicates: 
comparison <($miles,$miles)
comparison <($kilometres,$kilometres)
comparison <($celsius,$celsius)
comparison <($fahrenheit,$fahrenheit)
comparison <($price,$price)

## Sources: 
source GetCentroid($zip,lat,long) 	 			:- centroid(zip,lat,long). 	  		{invocation.wrappers.Ragnarok; getCentroid }
source GetDistance($lt1,$ln1,$lt2,$ln2,dist)	:- distance(lt1,ln1,lt2,ln2,dist).  {invocation.wrappers.Ragnarok; getDistance}
source Convert2Miles($distK,distM)				:- convert(distK,distM).  			{invocation.wrappers.Ragnarok; convertK2M}
source GetCityState($zip,city,state) 			:- municipality(city,state,zip). 	{invocation.wrappers.Ragnarok; query; SELECT t0.zipcode, t0.postofficename, t1.state_abbrev FROM uscensusbureau.zipnov99 t0, miscellaneous.statecodes t1 WHERE (t0.fips_state = t1.fips_code) AND (t0.zipcode=$input0)}
source GetFahrenheit($tempC,tempF)	 			:- convertTemp(tempC,tempF).  	  	{invocation.wrappers.Ragnarok; convertCelsiusToFahrenheit}
#source GetTicker($name,symbol)	 	 			:- listing(name,symbol). 		  	{invocation.wrappers.Ragnarok; query; SELECT t0.name, t0.ticker FROM miscellaneous.companies t0 WHERE (t0.name=$input0)}
source GetTicker($symbol,name) 	 	 			:- listing(name,symbol). 		  	{invocation.wrappers.Ragnarok; query; SELECT t0.ticker, t0.name FROM miscellaneous.companies t0 WHERE (t0.ticker=$input0)}
source GetCurrentTime(date,time)	 			:- currentTime(date,time) 		  	{invocation.wrappers.Ragnarok; currentTime }
#source YahooFinance($ticker,last,date,time,change,open,max,min,volume)	:- trade(date,time,ticker,last),market(date,ticker,close,open,max,min,volume),add(close,change,last) {invocation.wrappers.YahooFinance; GetQuote}


## Target Predicate: 
target TrafficByZipAndRadius($zipcode,$miles,unknown:Type,unknown:Title,latitude,longitude,unknown:Direction,unknown:Severity,date:report,date:update,date:end) {invocation.wrappers.YahooTraffic; TrafficByZipAndRadius}
##############################################################
